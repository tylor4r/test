var leftBorderWidth = 2; // переменная, может работать даже до обхявления
let newNumber = 3; // это переменная, которая работает быстрее и существует только после создания.
const PI = 3.14;  // константа, которую можно менять обходными путями
Существует всего 6 типов данный, но с приходом нового стандарта появился еще 1.
infinity - получаем при делении на 0
например, console.log(0/2);
Если console.log("string" / 9); то, получим NaN То есть строку делить на число не получится
Разницы между одинарными и двойными ковычками нет
Var sym = Symbol();   Это новый тип данных, появился недавно. На практике используется редко.
null - это, отдельный тип данных. Это, когда чего-то в коде не существует.
Пример, console.log(something); Выйбьет ошибку. Это и есть - Null. Так как просто не существует еще в 
моём коде такой переменной. Я еще её не создавал. И вообще ничего с таким именем не существует. По сути
это ссылка на несуществующий объект.
undefind - это, когда существует что-то, но там ничего нет.
Например, let something; Вот, я создал переменную, но внутрь ничего не положил.
Можно убедиться в этом самому: console.log(something);
var obj = {}; Объект. Объект - это коллекция данных.Это структура для хранений любых данных. И называется
еще комплексным типом данных.В нём могут содержаться все типы.
Данные, которые хранит объект называются свойствами либо методами. По сути действия, которые может совершать
объект.
Пример: 
let persone {
    name: "Dima",
    age: 27,
    isMarried: false
};
Так теперь чтобы достать из объекта информацию следуют выполнить следующие действия:
console.log(persone.name); Сначало идёт название объекта, а потом уже его свойство.
Это 1 способк, но есть еще 2 способ:
console.log(persone["name"]);
Есть частные части объекта - это массив. Для хранения данных.
let arr = ['plum.png','orange.jpg','apple.bmp'];
Это галлерея например. Вообще массив может содержать и: буквы, цифры, объекты и т.д. Массив предназначет для 
хранения любых типов данных и не обязательно однородных.
console.log(arr[1]); Отсчёт начинается с 0.
alert("Hello world!); Самое простое модальное окно. Ничего больше не грузится пока пользовать не нажмет ОК.
confirm("Are you here?); Этот даёт выбор между ОК и Отменой.
Любые данные получаемые от пользователя будут в виде строки
Коммпанда для определения типа данных - typeof();
console.log(typeof(null)) - выбьет  object, так как это официальная признанная ошибка в языке.
console.log(typeof(массив)) - выбьет object, так как это частный случай объекта.
Конкатенация - это приведения одного типа к другому. Присоединение.
В JS для этой цели служил унарный оператор +.
Например, console.log(4 + +"меня зовут Дима"); Меня зовут Дима - станет номером.
С помощью двух операторов: && || мы можем проверять:
1. Оба ли чекбокса заполнены
2. Првоерить размер экрана и модальное окно

Оператор ! служит для перевода значения к обратному, например,
let one = false,
    two = true;
console.log(one && two);
выбьет false так как одно значение false, А для оператора или нужно, чтобы два были true
console.log(!one && two);
теперь будет true, потому что я поставил ! b One превратится в true














