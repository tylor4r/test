1. В репозитории с моим проектом нужно кликнуть правой кнопкой мыши и выбрать git bash, который
вызовет командную строку
2. Пишу команду git init, создаётся скрытая папка с проектом
3. Создаю файл README командой - echo README.md
4. Теперь нужно произвести настройку и главное это установить имя пользователя и почту.
Если над проектом работает много людей, то нужно знать, кто, что поменял, а поэтому и необходима
почта и имя.
 Все команды гита начинаются с ключевого слова git
 5. git config
 Тут есть два вариант первый: git config --global, установит глобально на компьютер или
 git config --local, тогда установит только в ту папку где мой проект
 Идём дальше нужно установить имя пишу: git config --local user.name "Dima"
 Пробую... Получилось
 Теперь устанавливаю email git config user.email tylor4r@gmail.com
 Всё получилось и теперь Git готов к работе
 Состояния:
 Первое состояние, когда файл создан и просто существует.
 В этом состоянии git не следит за файлом, файл просто есть и всё.
 Второе состояние, с помощью специальной команды я говорю git следить за этим файлом и он попадает в индекс
 Здесь он уже следит за изменениями нашего файла
 Третье состояние, когда файл и все его изменения сохранются в системе контроля версий. В этом состоянии можно увидеть:
 Когда я файл изменял или как и в любой момент могу к нему вернуться.
 Ну и в этом состоянии я уже говорю git вот в этом состоянии запомни и сохрани, если что теперь я могу к нему вернуться.

Теперь команды:
1. git add -A означает, добавить все файлы, которые есть в папке в git
Всё файлы добавлены, чтобы проверить, есть команда
git status
Всё это значит, что файлы во втором состоянии.
Теперь перевожу их в Третье, команда:
git commit -a буква a здесь уже маленькая
Так можно оставить сообщение при сохрании commit для этого используем команду:
git commit -a -m "Это мой первый коммит"
Если сейчас написать git status, то получу ответ: "Ничего не надо комментить"
Так теперь дальше: Захожу в Index.html и меняю что-нибудь, либо добавляю
Если сейчас дам команду git status, то напишет, что был изменёл файл и нужно его закоммитеть
Сохраняю еще раз, но теперь использую другой синтаксис
git add *.html все, если проверить git status, то скажет что было закоментино
Теперь коммитирую всё и пишу текст
git commit -a -m "Это мой третий коммит с сообщением второй"









